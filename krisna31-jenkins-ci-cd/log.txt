Started by user Dicoding Indonesia
Obtained jenkins/Jenkinsfile from git /home/Documents/github-repos/a428-cicd-labs
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url /home/Documents/github-repos/a428-cicd-labs # timeout=10
Fetching upstream changes from /home/Documents/github-repos/a428-cicd-labs
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
 > git fetch --tags --force --progress -- /home/Documents/github-repos/a428-cicd-labs +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/react-app^{commit} # timeout=10
Checking out Revision 8c94bb7b3f55cf438a27e3fb82c313839d48d585 (refs/remotes/origin/react-app)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 8c94bb7b3f55cf438a27e3fb82c313839d48d585 # timeout=10
Commit message: "Update package.json"
 > git rev-list --no-walk 8c94bb7b3f55cf438a27e3fb82c313839d48d585 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:lts-buster-slim
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 1705823fad478ebe3e6f1d698a2c43a82bb00fa1beab28621601a2d9973fda78
but /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra could not be found among []
but /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -p 3000:3000 -w /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra -v /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra:/var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra:rw,z -v /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra@tmp:/var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:lts-buster-slim cat
$ docker top 497a9f3b6848275bf351e4ecc007970d78f0db6f1094023000256f966d92d31c -eo pid,comm
ERROR: The container started but didn't run the expected command. Please double check your ENTRYPOINT does execute the command passed as docker run argument, as required by official docker images (see https://github.com/docker-library/official-images#consistency for entrypoint consistency requirements).
Alternatively you can force image entrypoint to be disabled by adding option `--entrypoint=''`.
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] sh
+ npm install

up to date, audited 1912 packages in 41s

180 packages are looking for funding
  run `npm fund` for details

31 vulnerabilities (1 low, 1 moderate, 20 high, 9 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] sh
+ ./jenkins/scripts/test.sh
The following "npm" command (if executed) installs the "cross-env"
dependency into the local "node_modules" directory, which will ultimately
be stored in the Jenkins home directory. As described in
https://docs.npmjs.com/cli/install, the "--save-dev" flag causes the
"cross-env" dependency to be installed as "devDependencies". For the
purposes of this tutorial, this flag is not important. However, when
installing this dependency, it would typically be done so using this
flag. For a comprehensive explanation about "devDependencies", see
https://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies.
+ set +x
The following "npm" command tests that your simple Node.js/React
application renders satisfactorily. This command actually invokes the test
runner Jest (https://facebook.github.io/jest/).
+ npm test

> my-app@0.1.0 test
> react-scripts test --env=jsdom

PASS src/App.test.js (12.583 s)
  âœ“ renders without crashing (27 ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        23.047 s
Ran all test suites.
[0;33mOne of your dependencies, babel-preset-react-app, is importing the
"@babel/plugin-proposal-private-property-in-object" package without
declaring it in its dependencies. This is currently working because
"@babel/plugin-proposal-private-property-in-object" is already in your
node_modules folder for unrelated reasons, but it [1mmay break at any time[0;33m.

babel-preset-react-app is part of the create-react-app project, [1mwhich
is not maintianed anymore[0;33m. It is thus unlikely that this bug will
ever be fixed. Add "@babel/plugin-proposal-private-property-in-object" to
your devDependencies to work around this error. This will make this message
go away.[0m
  
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] sh
+ ./jenkins/scripts/deliver.sh
The following "npm" command builds your Node.js/React application for
production in the local "build" directory (i.e. within the
"/var/jenkins_home/workspace/simple-node-js-react-app" directory),
correctly bundles React in production mode and optimizes the build for
the best performance.
+ npm run build

> my-app@0.1.0 build
> react-scripts build

Creating an optimized production build...
/var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/react-scripts/scripts/build.js:19
  throw err;
  ^

Error: error:0308010C:digital envelope routines::unsupported
    at new Hash (node:internal/crypto/hash:71:19)
    at Object.createHash (node:crypto:133:10)
    at module.exports (/var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/webpack/lib/util/createHash.js:135:53)
    at NormalModule._initBuildHash (/var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/webpack/lib/NormalModule.js:417:16)
    at /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/webpack/lib/NormalModule.js:452:10
    at /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/webpack/lib/NormalModule.js:323:13
    at /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/loader-runner/lib/LoaderRunner.js:367:11
    at /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/loader-runner/lib/LoaderRunner.js:233:18
    at context.callback (/var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/loader-runner/lib/LoaderRunner.js:111:13)
    at /var/jenkins_home/workspace/submission-cicd-pipeline-jelvin_krisna_putra/node_modules/babel-loader/lib/index.js:59:103 {
  opensslErrorStack: [ 'error:03000086:digital envelope routines::initialization error' ],
  library: 'digital envelope routines',
  reason: 'unsupported',
  code: 'ERR_OSSL_EVP_UNSUPPORTED'
}

Node.js v18.16.0
+ set +x
The following "npm" command runs your Node.js/React application in
development mode and makes the application available for web browsing.
The "npm start" command has a trailing ampersand so that the command runs
as a background process (i.e. asynchronously). Otherwise, this command
can pause running builds of CI/CD applications indefinitely. "npm start"
is followed by another command that retrieves the process ID (PID) value
of the previously run process (i.e. "npm start") and writes this value to
the file ".pidfile".
+ sleep 1
+ npm start

> my-app@0.1.0 start
> react-scripts --openssl-legacy-provider start

+ echo 233
+ set +x
Now...
Visit http://localhost:3000 to see your Node.js/React application in action.
(This is why you specified the "args -p 3000:3000" parameter when you
created your initial Pipeline as a Jenkinsfile.)
[Pipeline] sh
+ sleep 1m
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Manual Approval)
[Pipeline] input
Lanjutkan ke tahap Deploy?
Proceed or Abort
Approved by Dicoding Indonesia
[Pipeline] sh
+ ./jenkins/scripts/kill.sh
The following command terminates the "npm start" process using its PID
(written to ".pidfile"), all of which were conducted when "deliver.sh"
was executed.
+ cat .pidfile
+ kill 233
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
Pipeline selesai. Aplikasi berhasil dideploy.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
$ docker stop --time=1 497a9f3b6848275bf351e4ecc007970d78f0db6f1094023000256f966d92d31c
$ docker rm -f 497a9f3b6848275bf351e4ecc007970d78f0db6f1094023000256f966d92d31c
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
